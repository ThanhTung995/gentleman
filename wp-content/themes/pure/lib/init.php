<?php
/**
 * Pure Framework.
 *
 * WARNING: This is part of the Pure Framework. DO NOT EDIT this file under any circumstances.
 * Please do all your modifications in a child theme.
 *
 * @package Pure
 * @author  Boong
 * @link    https://boongstudio.com/themes/pure
 */

do_action( 'pure_pre' );

add_action( 'pure_init', 'pure_i18n' );
/**
 * Load text domain for localization.
 */
function pure_i18n() {

	if ( ! defined( 'PURE_LANGUAGE_DIR' ) ) {
		define( 'PURE_LANGUAGE_DIR', get_template_directory() . '/lib/languages' );
	}
	load_theme_textdomain( 'pure', PURE_LANGUAGE_DIR );
}

add_action( 'pure_init', 'pure_theme_support' );
/**
 * Add theme features.
 */
function pure_theme_support() {

	add_theme_support( 'title-tag'             );
	add_theme_support( 'menus'                 );
	add_theme_support( 'post-thumbnails'       );
	add_theme_support( 'automatic-feed-links'  );
	add_theme_support( 'yoast-seo-breadcrumbs' );
	add_theme_support( 'woocommerce'           );

	add_theme_support( 'html5', array(
		'comment-form',
		'comment-list',
		'gallery',
		'caption',
		'search-form',
	) );

	if ( ! current_theme_supports( 'pure-menus' ) ) {
		$menus = array(
			'primary' => __( 'Primary Menu', 'pure' ),
			'mobile'  => __( 'Mobile Menu' , 'pure' ),
		);
		/**
		 * Filter for the menu supported by Pure
		 *
		 * @param array $menus The array of supported menus.
		 */

		add_theme_support( 'pure-menus', $menus );

		add_theme_support( 'customize-selective-refresh-widgets' );
	}
}

add_action( 'init', 'pure_post_type_support_post_meta', 11 );
/**
 * Add post type support for meta to post.
 */
function pure_post_type_support_post_meta() {

	$public_post_types = get_post_types( array( 'public' => true ) );

	foreach ( $public_post_types as $post_type ) {
		if ( 'post' === $post_type	) {
			add_post_type_support( $post_type, 'pure-entry-meta-before' );
			add_post_type_support( $post_type, 'pure-entry-meta-after'  );
		}
	}

}

add_action( 'pure_init', 'pure_contants' );
/**
 * Define Pure theme constants.
 */
function pure_contants() {

	// Theme Information.
	define( 'PARENT_THEME_NAME'   , 'Pure'  );
	define( 'PARENT_THEME_VERSION', '1.0.0' );

	// Directory and URL.
	define( 'PARENT_DIR', get_template_directory()       );
	define( 'PARENT_URL', get_template_directory_uri()   );

	$lib_url = PARENT_URL . '/lib';
	if ( ! defined( 'PURE_IMAGES_URL' ) ) {
		define( 'PURE_IMAGES_URL', $lib_url . '/img' );
	}
	if ( ! defined( 'PURE_ADMIN_IMAGES_URL' ) ) {
		define( 'PURE_ADMIN_IMAGES_URL', $lib_url . '/admin/img' );
	}
	if ( ! defined( 'PURE_JS_URL' ) ) {
		define( 'PURE_JS_URL', $lib_url . '/js' );
	}
	if ( ! defined( 'PURE_CSS_URL' ) ) {
		define( 'PURE_CSS_URL', $lib_url . '/css' );
	}
}

add_action( 'pure_init', 'pure_load_framework' );
/**
 * Load framework.
 */
function pure_load_framework() {

	if ( defined( 'PURE_LOADED_FRAMEWORK' ) && true === PURE_LOADED_FRAMEWORK ) {
		return;
	}
	// Pre-fire things.
	do_action( 'pure_pre_framework' );

	if ( defined( 'PURE_LOAD_FRAMEWORK' ) && false === PURE_LOAD_FRAMEWORK ) {
		return;
	}

	$lib_dir = trailingslashit( PARENT_DIR ) . 'lib/';
	require_once( $lib_dir . 'framework.php' );

	$classes_dir = $lib_dir . 'classes/';
	require_once( $classes_dir . 'Mobile_Detect.php'            );
	require_once( $classes_dir . 'Pure_Mobile_Menu_Walker.php'  );

	$functions_dir = $lib_dir . 'functions/';
	require_once( $functions_dir . 'general.php'    );
	require_once( $functions_dir . 'formatting.php' );
	require_once( $functions_dir . 'markup.php'     );
	require_once( $functions_dir . 'widgetize.php'  );
	require_once( $functions_dir . 'layout.php'     );
	require_once( $functions_dir . 'header.php'     );
	require_once( $functions_dir . 'color.php'      );
	require_once( $functions_dir . 'post.php'       );
	require_once( $functions_dir . 'snippets.php'   );
	require_once( $functions_dir . 'customer.php'    );

	if( class_exists( 'Kirki')) {
		$customizer_dir = $lib_dir . 'customizer/';
		require_once( $customizer_dir . 'config.php'  );
		require_once( $customizer_dir . 'info.php'    );
		require_once( $customizer_dir . 'code.php'    );
		require_once( $customizer_dir . 'styling.php' );
		require_once( $customizer_dir . 'header.php'  );
		require_once( $customizer_dir . 'footer.php'  );
		require_once( $customizer_dir . 'woocommerce.php' );
	}

	$shortcodes_dir = $lib_dir . 'shortcodes/';
	require_once( $shortcodes_dir . 'layout.php' );
	require_once( $shortcodes_dir . 'post.php' );
	require_once( $shortcodes_dir . 'video.php' );
	require_once( $shortcodes_dir . 'info.php' );
	require_once( $shortcodes_dir . 'social-icon.php' );

	$views_dir = $lib_dir . 'views/';
	require_once( $views_dir . 'meta.php'    );
	require_once( $views_dir . 'layout.php'  );
	require_once( $views_dir . 'global.php'  );
	require_once( $views_dir . 'header.php'  );
	require_once( $views_dir . 'menu.php'    );
	require_once( $views_dir . 'footer.php'  );
	require_once( $views_dir . 'sidebar.php' );
	require_once( $views_dir . 'loop.php'    );
	require_once( $views_dir . 'post.php'    );
	require_once( $views_dir . 'taxonomy.php');

	$modules_dir = $lib_dir . 'modules/';
	require_once( $modules_dir . 'nivo-slider/nivo-slider.php' );
	require_once( $modules_dir . 'featured-post.php'           );
	require_once( $modules_dir . 'post-views-counter.php'      );
	require_once( $modules_dir . 'related-posts.php'           );
	require_once( $modules_dir . 'gallery/gallery.php'         );
	require_once( $modules_dir . 'menu.php'                    );

	$js_dir = $lib_dir . 'js/';
	require_once( $js_dir . 'load-js.php' );

	$css_dir = $lib_dir . 'css/';
	require_once( $css_dir . 'load-css.php' );
	require_once( $css_dir . 'styling.php'  );

	define( 'PURE_LOADED_FRAMEWORK', true );
}

do_action( 'pure_init' );

do_action( 'pure_setup' );

add_action( 'init', 'pure_disable_emoji' );
/**
 * Disable Emoji by default.
 */
function pure_disable_emoji() {

	// If emoji is enabled in child theme, skip.
	if ( defined( 'PURE_ENABLE_EMOJI' ) && PURE_ENABLE_EMOJI ) {
		return null;
	}
	// All actions related to emojis.
	remove_action( 'admin_print_styles' , 'print_emoji_styles'              );
	remove_action( 'wp_head'            , 'print_emoji_detection_script', 7 );
	remove_action( 'admin_print_scripts', 'print_emoji_detection_script'    );
	remove_action( 'wp_print_styles'    , 'print_emoji_styles'              );
	remove_filter( 'wp_mail'            , 'wp_staticize_emoji_for_email'    );
	remove_filter( 'the_content_feed'   , 'wp_staticize_emoji'              );
	remove_filter( 'comment_text_rss'   , 'wp_staticize_emoji'              );

	// Filter to remove TinyMCE emojis.
	add_filter( 'tiny_mce_plugins', 'pure_disable_emoji_tiny_mce' );
}

/**
 * Disable emoji in TinyMCE editor.
 *
 * @param array $plugins TinyMCE plugins array.
 *
 * @return array
 */
function pure_disable_emoji_tiny_mce( $plugins ) {

	if ( is_array( $plugins ) ) {
		return array_diff( $plugins, array( 'wpemoji' ) );
	} else {
		return array();
	}
}
